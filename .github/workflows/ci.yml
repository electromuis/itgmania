on: [push, pull_request]

name: Continuous integration

jobs:
  ubuntu-build:
    name: Ubuntu
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Checkout submodules
        run: git submodule update --init
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y
          libasound2-dev
          libgl-dev
          libglu1-mesa-dev
          libgtk-3-dev
          libjack-dev
          libmad0-dev
          libpulse-dev
          libudev-dev
          libusb-dev
          libxinerama-dev
          libx11-dev
          libxrandr-dev
          libxtst-dev
          nasm
      - name: Configure
        run: cmake -B build
      - name: Build
        run: cmake --build build --config Release
      - name: Package
        run: |
          cmake --install build --prefix=build/package
      - uses: actions/upload-artifact@v3
        with:
          name: package-ubuntu
          path: build/package

  macos-build-arm64:
    name: macOS (M1)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Checkout submodules
        run: git submodule update --init
      - name: Install dependencies
        run: brew install
          nasm
      - name: Configure
        run: cmake -B build -DCMAKE_OSX_ARCHITECTURES=arm64
      - name: Build
        run: cmake --build build

  macos-build-x86_64:
    name: macOS (Intel)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Checkout submodules
        run: git submodule update --init
      - name: Install dependencies
        run: brew install
          nasm
      - name: Configure
        run: cmake -B build -DCMAKE_OSX_ARCHITECTURES=x86_64
      - name: Build
        run: cmake --build build

  windows-build:
    name: Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Checkout submodules
        run: git submodule update --init
      - name: Configure
        run: cmake -B build
      - name: Build
        run: cmake --build build --config Release
      - name: Package
        run: |
          cmake --install build --prefix=build/package
      - uses: actions/upload-artifact@v3
        with:
          name: package-windows
          path: build/package

  release-sdk:
    name: "Release SDK"
    needs:
      - ubuntu-build
      - windows-build
    runs-on: ubuntu-latest
    if: success() || failure()
    steps:
      - name: Download reports' artifacts
        uses: actions/download-artifact@v3
        with:
          path: downloaded_artifacts
      - name: "Extract artifacts"
        run: |
          cp -r downloaded_artifacts/package-windows/Plugins/SDK ./SMSDK
          mv ./SMSDK/include/generated ./SMSDK/include/generated_win
          cp -r downloaded_artifacts/package-ubuntu/itgmania/Plugins/SDK/include/generated ./SMSDK/include/generated_linux
      - uses: actions/upload-artifact@v3
        with:
          name: SMSDK
          path: SMSDK
